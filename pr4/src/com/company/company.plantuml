@startuml

title __COMPANY's Class Diagram__\n

  package com.company {
    class Answer {
        - text : String
        - isCorrect : boolean
        - isChosen : boolean
        + Answer()
        + Answer()
        + getText()
        + setText()
        + isCorrect()
        + setCorrect()
        + isChosen()
        + setChosen()
    }
  }
  

  package com.company {
    class Engine {
        - keepGoing : boolean
        + start()
    }
  }
  

  package com.company {
    interface IMenuOption {
        {abstract} + onClick()
    }
  }
  

  package com.company {
    interface IQuestion {
        {abstract} + ask()
        {abstract} + setTitle()
        {abstract} + addAnswer()
        {abstract} + respond()
        {abstract} + getMark()
    }
  }
  

  package com.company {
    interface ITest {
        {abstract} + createTest()
        {abstract} + addQuestion()
        {abstract} + begin()
        {abstract} + printTest()
        {abstract} + getTestId()
        {abstract} + getTestName()
        {abstract} + setTestName()
    }
  }
  

  package com.company {
    class Input {
        {static} - scanner : Scanner
        {static} + getNextLine()
        {static} + getChoice()
    }
  }
  

  package com.company {
    class Main {
        {static} + main()
    }
  }
  

  package com.company {
    class Menu {
        - options : Option[]
        + Menu()
        + getWorkerByIndex()
        + toString()
    }
  }
  

  package com.company {
    class Option {
        - name : String
        + Option()
        + Option()
        + getName()
        + setName()
        + getMenuOption()
        + setMenuOption()
    }
  }
  

  package com.company {
    class Printer {
        {static} + print()
        {static} + print()
        {static} + print()
    }
  }
  

  package com.company {
    class Question {
        - answers : Answer[]
        - title : String
        + Question()
        + ask()
        + setTitle()
        + addAnswer()
        + respond()
        + getMark()
        + toString()
    }
  }
  

  package com.company {
    class SchoolSystem {
        - users : User[]
        - tests : ITest[]
        + SchoolSystem()
        + getTests()
        + getTest()
        + addTest()
        + registerUser()
        + getMenu()
        + login()
    }
  }
  

  package com.company {
    enum Subjects {
      MATH
      LITERATURE
    }
  }
  

  package com.company {
    class Student {
        + toString()
        + startSession()
    }
  }
  

  package com.company {
    enum UserType {
      STUDENT
      TEACHER
    }
  }
  

  package com.company {
    class Teacher {
        + toString()
        + startSession()
    }
  }
  

  package com.company {
    enum UserType {
      STUDENT
      TEACHER
    }
  }
  

  package com.company {
    class Test {
        - questions : IQuestion[]
        - name : String
        + Test()
        + createTest()
        + addQuestion()
        + begin()
        + printTest()
        + getTestId()
        + getTestName()
        + setTestName()
        + toString()
    }
  }
  

  package com.company {
    abstract class User {
        - name : String
        + getName()
        + setName()
        + startProcess()
        + register()
        {abstract} + startSession()
    }
  }
  

  package com.company {
    enum UserType {
      STUDENT
      TEACHER
    }
  }
  

  Engine o-- SchoolSystem : schoolSystem
  Engine o-- Menu : initMenu
  Option o-- IMenuOption : menuOption
  Question -up-|> IQuestion
  SchoolSystem o-- Menu : studentMenu
  SchoolSystem o-- Menu : teacherMenu
  SchoolSystem o-- Menu : defaultMenu
  SchoolSystem +-down- Subjects
  Student -up-|> User
  Student o-- UserType : type
  Student +-down- UserType
  Teacher -up-|> User
  Teacher o-- UserType : type
  Teacher +-down- UserType
  Test -up-|> ITest
  Test o-- Subjects : subject
  User o-- SchoolSystem : schoolSystem
  User +-down- UserType


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
